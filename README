=============================
Welcome to the Hermes Project
=============================

This is a basic README file with generic information relevant for Hermes examples.


Copyright
=========

Copyright (c) 2010 hp-FEM group at the University of Nevada,
Reno (UNR). Email: hpfem@unr.edu, home page: http://hpfem.org/.


User Documentation
==================

User Documentation is available online at http://hpfem.org/hermes/doc/index.html.

Compilation
===========
After successful instalation of Hermes from https://github.com/hpfem/hermes-dev, one has to set cmake correctly to find Hermes common and Hermes2D libraries.
These are by default installed to::

    /include and /lib (runtime paths of the library /usr/local/lib) on Linux
    "C:\Program Files" on Win32
    "C:\Program Files (x86)" on Win64
		
But as this can change, and in all cases for those using Windows OS, one is advised to create his/her CMake.vars file, according to attached example file CMake.vars.example with the
correct path to his/her installation of Hermes, and possibly with other specifications of the build.

Next steps are to run::

    $ cmake .
    $ make

If you have cmake text-based UI installed, you can do::

    $ ccmake .
      press C
      customize your build
      press C
      press G
    $ make

Hermes examples build configuration scripts will look for required libraries on default
include and system paths. If you packages are installed elsewhere, you need to
specify their paths. Consult either online documetation (see the link above) or
cmake/FindXYX.cmake files for exact names. These values have to be put into
CMake.var file located in your build directory.

Intel C Compiler
----------------

To use Intel C compiler::

    $ export CC=/path/to/icc
    $ export CXX=/path/to/icpc
    $ cmake .
    $ make

NOTE: version 10.0.026 did not work for us (some compatibility issues with
STL), 10.1.022 works ok.
